npe_default_settings = {

	["enable"]		= false	-- Enable/Disable New Player Experience
}

local SOUNDS_LIST = { 
	{"NPE_LOW","NPE - low volume"},
	{"NPE_MEDIUM","NPE - mid volume"},
	{"NPE_HIGH","NPE - high volume"},
	{"PDA","PDA"},
	{"RADIO","RADIO"},
	{"FROM_LOW","FROM - low volume"},
	{"FROM_MEDIUM","FROM - mid volume"},
	{"FROM_HIGH","FROM - high volume"},
}
	

function on_mcm_load()

		op = { id= "general", sh=true, text="ui_mcm_npe_general", gr ={
				{id = "title",type= "slide",link= "ui_options_slider_player",text="ui_mcm_npe_general_title",size= {512,50},spacing= 20 },
				{ id = "desc", type = "desc", clr = {200, 200, 255, 200}, text = "ui_mcm_npe_general_desc" },
				{id = "enable", type = "check", val = 1, def=true},
				{id = "play_loop",  type = 'track', val = 2, min = 1, max = 10, step = 1, def = 10},
				{id = "execution_loop",  type = 'track', val = 2, min = 1, max = 10, step = 1, def = 3},
				-- {id = "actions_execution_loop",  type = 'track', val = 2, min = 1, max = 10, step = 1, def = 3},
				{id = "pause_game", type = "check", val = 1, def=false},
				{id= "sounds_set"	,type= "list", val = 0, def="NPE_LOW", content= SOUNDS_LIST, no_str = true, },
				{id = "disable_dof", type = "check", val = 1, def=false},
				},
			}
	return op, "npe"
end

function on_option_change()
    -- if ui_mcm then
    --     npe_default_settings["enable"] = ui_mcm.get("npe/general/enable")
    -- end
end

function npe_get_setting(module_name, var_name)
	printf("//[NPE][MCM] npe_get_setting %s %s", module_name, var_name)
	-- Get MCM setting
	if ui_mcm then 
		return ui_mcm.get("npe/" .. module_name .. "/" .. var_name)
	end
	
end

function npe_set_setting(module_name, var_name, value)
	printf("-[NPE][MCM] npe_set_setting %s %s", module_name, var_name)
	-- Set MCM setting
	if ui_mcm then 
		ui_mcm.set("npe/" .. module_name .. "/" .. var_name, value)
	end

end

function npe_module_get_setting(module_name, var_name)

	-- Get MCM setting
	if ui_mcm then 
		return ui_mcm.get("npe_module/" .. module_name .. "/" .. var_name)
	end
	
end

function npe_module_set_setting(module_name, var_name, value)

	-- Set MCM setting
	if ui_mcm then 
		ui_mcm.set("npe_module/" .. module_name .. "/" .. var_name, value)
	end

end

function npe_module_installed(script)
	if script then
		return script.module_installed or nil
	else
		return false
	end
end

function get_module_menu(module_deck)
    local gr = {
        { id = "title", type = "slide", link = "ui_options_slider_player", text = module_deck.mcm_menu_title, size = {512,50}, spacing = 20 },
        { id = "desc", type = "desc", clr = {200, 200, 255, 200}, text = module_deck.mcm_menu_desc }
    }

	-- for i = 1, #module_deck.sets do
	-- 	table.insert(gr, { id = module_deck.sets[i].id, type = "check", val = 1, def = false } )
	-- end
    for k,v in pairs(module_deck.sets) do
        table.insert(gr, { id = v.id, type = "check", val = 1, def = false } )
    end
    return gr
end

function on_game_start()
	-- RegisterScriptCallback("on_option_change", on_option_change)
	-- on_option_change()
end