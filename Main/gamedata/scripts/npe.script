-- This file contains the events that can be used to trigger the NPE system
-- The events are defined as constants

MODULE_TYPE = {
    NONE = "none",
    NPE = "npe",
    ANOMALY = "anomaly",
}

EVENT = {

    GAME_START = { name = "Game Start",  handler = nil, module = MODULE_TYPE.NONE },

    -- NPCs
    NPC_LOOTED = { name = "NPC Looted",  handler = nil, module = MODULE_TYPE.NPE },
    NPC_KILLED = { name = "NPC Killed",  handler = "npc_on_death_callback", module = MODULE_TYPE.ANOMALY },

    -- Mutants
    MUTANT_LOOTED = { name = "Mutant Looted",  handler = "monster_on_actor_use_callback", module = MODULE_TYPE.ANOMALY },
    MUTANT_KILLED = { name = "Mutant Killed",  handler = "monster_on_death_callback", module = MODULE_TYPE.ANOMALY },

    -- looting
    ITEM_TAKEN_FROM_BOX = { name = "Item Taken From Box",  handler = nil, module = MODULE_TYPE.NPE },
    ITEM_PUT_IN_BOX = { name = "Item Put In Box",  handler = nil, module = MODULE_TYPE.NPE },

    -- Actor
    DAMAGE_DEALT = { name = "Damage Dealt",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_USE_MUTANT_CORPSE = { name = "Check Mutant Corpse",  handler = "monster_on_actor_use_callback", module = MODULE_TYPE.ANOMALY },
    ACTOR_USE_NPC_CORPSE = { name = "Check NPC Corpse",  handler = "npc_on_use", module = MODULE_TYPE.NPE },
    ACTOR_DEATH = { name = "Actor Death",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_HIT= { name = "Actor Hit",  handler = "actor_on_hit_callback", module = MODULE_TYPE.ANOMALY },
    ACTOR_BLEEDING = { name = "Actor Bleeding",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_IRRADIATED = { name = "Actor Irradiated",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_HUNGRY = { name = "Actor Hungry",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_OVERWEIGHT = { name = "Actor Overweight",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_THIRSTY = { name = "Actor Thirsty",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_STRESSED = { name = "Actor Stressed",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_MAD = { name = "Actor Mad",  handler = nil, module =  MODULE_TYPE.NPE },
    ACTOR_SLEEP = { name = "Actor Sleep",  handler = "actor_on_sleep", module = MODULE_TYPE.NPE },
    ACTOR_RANK_UP = { name = "Actor Rank Up",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_LEVEL_UP = { name = "Actor Level Up",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_SKILL_UP = { name = "Actor Skill Up",  handler = nil, module = MODULE_TYPE.NPE },
    ACTOR_PERK_UP = { name = "Actor Perk Up",  handler = nil, module = MODULE_TYPE.NPE },

    -- Items
    ITEM_USED = { name = "Item Used",  handler = "actor_on_use", module = MODULE_TYPE.ANOMALY },
    ITEM_TO_BELT = { name = "Item To Belt",  handler = nil, module = MODULE_TYPE.NPE },
    ITEM_TO_RACK = { name = "Item To Rack",  handler = nil, module = MODULE_TYPE.NPE },
    ITEM_TO_SLOT = { name = "Item To Slot",  handler = nil, module = MODULE_TYPE.NPE }, 

    -- trades, workbenches, and inventory
    TRADE_STARTED = { name = "Trade Started",  handler = "ActorMenu_on_trade_started", module = MODULE_TYPE.ANOMALY },

    -- anomalies
    -- ENTERED_RADIATION_FIELD = { name = "Entered Radiation Field",  handler = "actor_on_feeling_anomaly", module =  MODULE_TYPE.NPE },
    ENTERED_ANOMALOUS_FIELD = { name = "Entered Anomalous Field",  handler = "actor_on_feeling_anomaly", module = MODULE_TYPE.ANOMALY },

    -- stashes, tasks, and maps
    STASH_COORDINATES_REVEALED = { name = "Stash Coordinates Revealed",  handler = nil, module = MODULE_TYPE.NPE },
    STASH_OPENED = { name = "Stash Opened",  handler = nil, module = MODULE_TYPE.NPE },
    QUEST_COMPLETED = { name = "Quest Completed",  handler = nil, module = MODULE_TYPE.NPE },
    QUEST_ACCEPTED = { name = "Quest Accepted",  handler = nil, module = MODULE_TYPE.NPE },
    ACHIEVEMENT_EARNED = { name = "Achievement Earned",  handler = nil, module = MODULE_TYPE.NPE },

    -- the zone
    SURGE = { name = "Surge",  handler = nil, module = MODULE_TYPE.NPE },
    PSY_STORM = { name = "Psy Storm",  handler = nil, module = MODULE_TYPE.NPE },

    -- weapons events
    WEAPON_JAM = { name = "Weapon Jam",  handler = nil, module = MODULE_TYPE.NPE },
    WEAPON_REPAIR = { name = "Weapon Repair",  handler = nil, module = MODULE_TYPE.NPE },
    WEAPON_MODIFICATION = { name = "Weapon Modification",  handler = nil, module = MODULE_TYPE.NPE },
    WEAPON_UPGRADE = { name = "Weapon Upgrade",  handler = nil, module = MODULE_TYPE.NPE },
    WEAPON_NO_AMMO = { name = "Weapon No Ammo",  handler = nil, module = MODULE_TYPE.NPE },
    SCOPE_ATTACHED = { name = "Scope Attached",  handler = nil, module = MODULE_TYPE.NPE },

}
-- list of all the events that can be triggered
function isActorBleeding()
    if db.actor == nil then
        return false
    end
    local bleeding = db.actor.bleeding > 0
    return bleeding
end

function isActorIrradiated()
    if db.actor == nil then
        return false
    end
    local irradiated = db.actor.radiation > 0
    return irradiated
end

function isActorStressed()
    if db.actor == nil then
        return false
    end
    local stressed = db.actor.psy_health < 1
    return stressed
end

function isActorGoingMad()
    if db.actor == nil then
        return false
    end
    local madness = db.actor.psy_health < 0.5
    return madness
end

function isActorHungry()

    local hungry = actor_status.get_satienty(true) > 0
    return hungry
end

function isActorOverweight()

    local overweight = actor_status.get_overweight(true) > 0
    return overweight
end