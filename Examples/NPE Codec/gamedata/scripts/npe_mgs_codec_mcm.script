-- NPE Module template

-- PREPARATION

-- FIRST STEP
--      you need to define the name of this module
--      use as module name the name of your mod main script preceded by npe_
--      for example (mymod.script --> npe_mymod_mcm.script). Therefore the modelname chosen in this example is "npe_mymod"
--      or something that you know will be unique in the hypotetical modlist's scripts' namespace, where this npe module will be added
-- SECOND STEP
--      replace in all filenames included in this template module, this script included, the string "modulename" with your chosen module name
--      replace in this script all the instances of modulename and setname as required

-- CREATION OF A NEW NPE MODULE

-- [OPTIONAL] Custom event handlers
--      Define here all your custom events handlers that are any of the custom events you defined below

-- for example

function owns_item(item)
    -- printf("Checking if actor owns item: %s", item)
    local found = false

	local function check_items(actor,itm)
		local sec = itm:section()
        if sec == item then
            found = true
        end
	end
	db.actor:iterate_inventory(check_items,db.actor)

    return found
end

function a_custom_handler_functor(obj)
    printf("Custom handler functor called with parameter: %s", obj)
end

-- [OPTIONAL] Custom events
--      Define here all your custom events that use the custom event handlers defined above

local EVENT = {
    RF_RECEIVER_OWNED = { 
        name = "RF Receiver Owned", 
        handler = { 
            name = "on_actor_owning_rf-receiver",
            functor = {"npe_mgs_codec_mcm", "owns_item", "detector_radio" }
        } 
    },
    VODKA_OWNED = { 
        name = "Vodka Owned", 
        handler = { 
            name = "on_actor_owning_vodka",
            functor = {"npe_mgs_codec_mcm", "owns_item", "vodka" }
        } 
    },    
}

-- local EVENT = {
--     MY_CUSTOM_EVENT = { 
--         name = "My Custom Event", -- this will be presented in the tutorial window as breadcrumb in the top left. It represent the context of the event  and it's not localized (use english preferably)
--         handler = { 
--             name = "a_custom_event_name",
--             functor = {"npe_modulename_mcm", "a_custom_handler_functor", "my_custom_parameter"}
--         } 
--     },
-- }

-- [MANDATORY] Define your deck
--      Define here your deck, with all the sets and cards
--      A deck represents a number of sets that contains cards that will be shown to the player in a specific order
--      A set representing a tutorial in practice that can become active when a specific event is triggered. Once active NPE will show it to the player
--      A card is a single tutorial step that will be shown to the player
--      A card can have an image, a title and a description

local deck_npe_mgs_codec = { 
    title = "MGS Codec", -- e.g. "My Mod Introduction" -- only used internally by the NPE Manager
    module= "mgs_codec", -- must be unique thus the use of modulename whatever you have choosen above
    id="mgs_codec", -- must be unique thus the use of modulename whatever you have choosen above
    dialog= npe.DIALOG.CODEC,
    sets = {
        {
            id = "old_friend",
            title = "ui_mcm_npe_module_mgs_codec_old_friend_set_title",
            codec_frequency = 140.85,
            cards = {
                [1] = {
                    title = "ui_mgs_codec_old_friend_card1_title",
                    message = "ui_mgs_codec_old_friend_card1_message",
                    portrait_caller = "ui_npe_mgs_codec_otacon",
                    portrait_actor = "ui_npe_mgs_codec_snake",
                    sound = "npe\\mgs_codec\\voiceover\\otacon\\listentome",
                },
                [2] = {
                    title = "ui_mgs_codec_old_friend_card2_title",
                    message = "ui_mgs_codec_old_friend_card2_message",
                    portrait_caller = "ui_npe_mgs_codec_otacon",
                    portrait_actor = "ui_npe_mgs_codec_snake",
                    sound = "npe\\mgs_codec\\voiceover\\otacon\\becareful",
                },                
            },
            context = {
                -- here you are using a custom event
                event = EVENT.RF_RECEIVER_OWNED,
                -- delay is optional and it's the time in seconds after the event is triggered before the set is shown 
                -- this time can vary depending on the number of playable sets in the queued_context at the moment of the activation
                -- the number set it's the minimum not guaranteed
                delay = 0,
                -- pause_game is optional and if true the game is paused when the set is shown
                pause_game = false,
            },
            end_sound = "npe\\mgs_codec\\voiceover\\otacon\\just-hold-on-ok",
        },    
    },
}


function on_mcm_load()
    -- [MANDATORY] The NPE module MCM menu meeds to be populated with the sets' ids defined above
	op =  { id= "mgs_codec", sh=true, text="ui_mcm_npe_module_mgs_codec", gr ={
				{id = "title",type= "slide",link= "ui_options_slider_player",text="ui_mcm_npe_module_mgs_codec_title",size= {512,50},spacing= 20 },
                -- [MANDATORY] The sets' ids defined above need to be added here. 
                --      This allow the user to check sets that have been shown (selected) and evenually replay them (unselect in mcm) if needed
                {id = "old_friend", type = "check", val = 1, def=false},
			}
		}

	return op, "npe_module"  -- [IMPORTANT] do not change this line
end

-- [MANDATORY] At game start add your deck with the NPE Manager
--      you need to replace "deck_npe_modulename" with the name of your deck

function on_game_start()
    if npe then
        npe_manager.Register_npe_module(deck_npe_mgs_codec)
    end
end